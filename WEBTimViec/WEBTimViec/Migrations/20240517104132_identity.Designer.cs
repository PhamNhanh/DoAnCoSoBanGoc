// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WEBTimViec.Data;

#nullable disable

namespace WEBTimViec.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240517104132_identity")]
    partial class identity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WEBTimViec.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiThieuNhaTuyenDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HinhAnhNTDid")
                        .HasColumnType("int");

                    b.Property<int?>("HocVanid")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhaTuyenDung_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SDTNhaTuyenDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT_UngVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThanhPhoid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGianCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TuGioiThieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HinhAnhNTDid");

                    b.HasIndex("HocVanid")
                        .IsUnique()
                        .HasFilter("[HocVanid] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ThanhPhoid");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("WEBTimViec.Models.BaiTuyenDung", b =>
                {
                    b.Property<int>("BaiTuyenDung_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BaiTuyenDung_id"));

                    b.Property<int?>("HinhAnhBTDid")
                        .HasColumnType("int");

                    b.Property<string>("KieuCongViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KinhNghiemid")
                        .HasColumnType("int");

                    b.Property<decimal?>("Luong_max")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Luong_min")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MoTaCongViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhucLoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBaiTuyenDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThanhPhoid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGianCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianDangBai")
                        .HasColumnType("datetime2");

                    b.Property<string>("YeuCauKyNang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("applicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BaiTuyenDung_id");

                    b.HasIndex("HinhAnhBTDid");

                    b.HasIndex("KinhNghiemid");

                    b.HasIndex("ThanhPhoid");

                    b.HasIndex("applicationUserId");

                    b.ToTable("baiTuyenDungs");
                });

            modelBuilder.Entity("WEBTimViec.Models.BaiTuyenDung_ChuyenNganh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaiTuyenDungid")
                        .HasColumnType("int");

                    b.Property<int>("ChuyenNganhid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BaiTuyenDungid");

                    b.HasIndex("ChuyenNganhid");

                    b.ToTable("baiTuyenDung_ChuyenNganhs");
                });

            modelBuilder.Entity("WEBTimViec.Models.BaiTuyenDung_ViTri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaiTuyenDungid")
                        .HasColumnType("int");

                    b.Property<int>("ViTriCongViecid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BaiTuyenDungid");

                    b.HasIndex("ViTriCongViecid");

                    b.ToTable("baiTuyenDung_ViTris");
                });

            modelBuilder.Entity("WEBTimViec.Models.ChuyenNganh", b =>
                {
                    b.Property<int>("ChuyenNganh_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChuyenNganh_id"));

                    b.Property<string>("ChuyenNganh_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChuyenNganh_id");

                    b.ToTable("chuyenNganhs");
                });

            modelBuilder.Entity("WEBTimViec.Models.HinhAnhBTD", b =>
                {
                    b.Property<int>("HinhAnhBTD_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HinhAnhBTD_id"));

                    b.Property<string>("image_url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HinhAnhBTD_id");

                    b.ToTable("hinhAnhBTDs");
                });

            modelBuilder.Entity("WEBTimViec.Models.HinhAnhNTD", b =>
                {
                    b.Property<int>("HinhAnhNTD_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HinhAnhNTD_id"));

                    b.Property<string>("image_url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HinhAnhNTD_id");

                    b.ToTable("hinhAnhNTDs");
                });

            modelBuilder.Entity("WEBTimViec.Models.HocVan", b =>
                {
                    b.Property<int>("HocVan_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HocVan_id"));

                    b.Property<float>("GPA")
                        .HasColumnType("real");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTotNghiep")
                        .HasColumnType("datetime2");

                    b.Property<int>("TruongDaiHocid")
                        .HasColumnType("int");

                    b.HasKey("HocVan_id");

                    b.HasIndex("TruongDaiHocid");

                    b.ToTable("hocVans");
                });

            modelBuilder.Entity("WEBTimViec.Models.KinhNghiem", b =>
                {
                    b.Property<int>("KinhNghiem_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KinhNghiem_id"));

                    b.Property<string>("NamKinhNghiem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KinhNghiem_id");

                    b.ToTable("kinhNghiems");
                });

            modelBuilder.Entity("WEBTimViec.Models.KyNangMem", b =>
                {
                    b.Property<int>("KNMem_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KNMem_id"));

                    b.Property<string>("KNMem_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KNMem_id");

                    b.ToTable("kyNangMems");
                });

            modelBuilder.Entity("WEBTimViec.Models.ThanhPho", b =>
                {
                    b.Property<int>("ThanhPho_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ThanhPho_id"));

                    b.Property<string>("ThanhPho_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ThanhPho_id");

                    b.ToTable("thanhPhos");
                });

            modelBuilder.Entity("WEBTimViec.Models.TruongDaiHoc", b =>
                {
                    b.Property<int>("TruongDaiHoc_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TruongDaiHoc_id"));

                    b.Property<string>("TruongDaiHoc_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TruongDaiHoc_id");

                    b.ToTable("truongDaiHocs");
                });

            modelBuilder.Entity("WEBTimViec.Models.UngTuyen", b =>
                {
                    b.Property<int>("UngTuyen_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UngTuyen_id"));

                    b.Property<int?>("BaiTuyenDungid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGianUngTuyen")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThuGioiThieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("applicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("application_Userid")
                        .HasColumnType("int");

                    b.Property<string>("url_CV")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UngTuyen_id");

                    b.HasIndex("BaiTuyenDungid");

                    b.HasIndex("applicationUserId");

                    b.ToTable("ungTuyens");
                });

            modelBuilder.Entity("WEBTimViec.Models.UngVien_ChuyenNganh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChuyenNganhid")
                        .HasColumnType("int");

                    b.Property<int?>("UngVienid")
                        .HasColumnType("int");

                    b.Property<string>("applicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ChuyenNganhid");

                    b.HasIndex("applicationUserId");

                    b.ToTable("ungVien_ChuyenNganhs");
                });

            modelBuilder.Entity("WEBTimViec.Models.UngVien_KyNangMem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("KNMemid")
                        .HasColumnType("int");

                    b.Property<int?>("UngVienid")
                        .HasColumnType("int");

                    b.Property<string>("applicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("kyNangMemKNMem_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("applicationUserId");

                    b.HasIndex("kyNangMemKNMem_id");

                    b.ToTable("ungVien_KyNangMems");
                });

            modelBuilder.Entity("WEBTimViec.Models.ViTriCongViec", b =>
                {
                    b.Property<int>("ViTriCongViec_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ViTriCongViec_id"));

                    b.Property<string>("ViTriCongViec_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ViTriCongViec_id");

                    b.ToTable("viTriCongViecs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WEBTimViec.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WEBTimViec.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WEBTimViec.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WEBTimViec.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WEBTimViec.Models.ApplicationUser", b =>
                {
                    b.HasOne("WEBTimViec.Models.HinhAnhNTD", "HinhAnhNTD")
                        .WithMany()
                        .HasForeignKey("HinhAnhNTDid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WEBTimViec.Models.HocVan", "hocVan")
                        .WithOne("applicationUser")
                        .HasForeignKey("WEBTimViec.Models.ApplicationUser", "HocVanid");

                    b.HasOne("WEBTimViec.Models.ThanhPho", "thanhPho")
                        .WithMany()
                        .HasForeignKey("ThanhPhoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HinhAnhNTD");

                    b.Navigation("hocVan");

                    b.Navigation("thanhPho");
                });

            modelBuilder.Entity("WEBTimViec.Models.BaiTuyenDung", b =>
                {
                    b.HasOne("WEBTimViec.Models.HinhAnhBTD", "hinhAnhBTD")
                        .WithMany()
                        .HasForeignKey("HinhAnhBTDid");

                    b.HasOne("WEBTimViec.Models.KinhNghiem", "kinhNghiem")
                        .WithMany()
                        .HasForeignKey("KinhNghiemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WEBTimViec.Models.ThanhPho", "thanhPho")
                        .WithMany()
                        .HasForeignKey("ThanhPhoid");

                    b.HasOne("WEBTimViec.Models.ApplicationUser", "applicationUser")
                        .WithMany()
                        .HasForeignKey("applicationUserId");

                    b.Navigation("applicationUser");

                    b.Navigation("hinhAnhBTD");

                    b.Navigation("kinhNghiem");

                    b.Navigation("thanhPho");
                });

            modelBuilder.Entity("WEBTimViec.Models.BaiTuyenDung_ChuyenNganh", b =>
                {
                    b.HasOne("WEBTimViec.Models.BaiTuyenDung", "baiTuyenDung")
                        .WithMany("baiTuyenDung_ChuyenNganhs")
                        .HasForeignKey("BaiTuyenDungid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WEBTimViec.Models.ChuyenNganh", "chuyenNganh")
                        .WithMany("baiTuyenDung_ChuyenNganhs")
                        .HasForeignKey("ChuyenNganhid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("baiTuyenDung");

                    b.Navigation("chuyenNganh");
                });

            modelBuilder.Entity("WEBTimViec.Models.BaiTuyenDung_ViTri", b =>
                {
                    b.HasOne("WEBTimViec.Models.BaiTuyenDung", "baiTuyenDung")
                        .WithMany("baiTuyenDung_ViTris")
                        .HasForeignKey("BaiTuyenDungid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WEBTimViec.Models.ViTriCongViec", "viTriCongViec")
                        .WithMany("baiTuyenDung_ViTris")
                        .HasForeignKey("ViTriCongViecid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("baiTuyenDung");

                    b.Navigation("viTriCongViec");
                });

            modelBuilder.Entity("WEBTimViec.Models.HocVan", b =>
                {
                    b.HasOne("WEBTimViec.Models.TruongDaiHoc", "truongDaiHoc")
                        .WithMany()
                        .HasForeignKey("TruongDaiHocid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("truongDaiHoc");
                });

            modelBuilder.Entity("WEBTimViec.Models.UngTuyen", b =>
                {
                    b.HasOne("WEBTimViec.Models.BaiTuyenDung", "BaiTuyenDung")
                        .WithMany()
                        .HasForeignKey("BaiTuyenDungid");

                    b.HasOne("WEBTimViec.Models.ApplicationUser", "applicationUser")
                        .WithMany()
                        .HasForeignKey("applicationUserId");

                    b.Navigation("BaiTuyenDung");

                    b.Navigation("applicationUser");
                });

            modelBuilder.Entity("WEBTimViec.Models.UngVien_ChuyenNganh", b =>
                {
                    b.HasOne("WEBTimViec.Models.ChuyenNganh", "chuyenNganh")
                        .WithMany("ungVien_ChuyenNganhs")
                        .HasForeignKey("ChuyenNganhid");

                    b.HasOne("WEBTimViec.Models.ApplicationUser", "applicationUser")
                        .WithMany("ungVien_ChuyenNganhs")
                        .HasForeignKey("applicationUserId");

                    b.Navigation("applicationUser");

                    b.Navigation("chuyenNganh");
                });

            modelBuilder.Entity("WEBTimViec.Models.UngVien_KyNangMem", b =>
                {
                    b.HasOne("WEBTimViec.Models.ApplicationUser", "applicationUser")
                        .WithMany("ungVien_KyNangMems")
                        .HasForeignKey("applicationUserId");

                    b.HasOne("WEBTimViec.Models.KyNangMem", "kyNangMem")
                        .WithMany("ungVien_KyNangMem")
                        .HasForeignKey("kyNangMemKNMem_id");

                    b.Navigation("applicationUser");

                    b.Navigation("kyNangMem");
                });

            modelBuilder.Entity("WEBTimViec.Models.ApplicationUser", b =>
                {
                    b.Navigation("ungVien_ChuyenNganhs");

                    b.Navigation("ungVien_KyNangMems");
                });

            modelBuilder.Entity("WEBTimViec.Models.BaiTuyenDung", b =>
                {
                    b.Navigation("baiTuyenDung_ChuyenNganhs");

                    b.Navigation("baiTuyenDung_ViTris");
                });

            modelBuilder.Entity("WEBTimViec.Models.ChuyenNganh", b =>
                {
                    b.Navigation("baiTuyenDung_ChuyenNganhs");

                    b.Navigation("ungVien_ChuyenNganhs");
                });

            modelBuilder.Entity("WEBTimViec.Models.HocVan", b =>
                {
                    b.Navigation("applicationUser");
                });

            modelBuilder.Entity("WEBTimViec.Models.KyNangMem", b =>
                {
                    b.Navigation("ungVien_KyNangMem");
                });

            modelBuilder.Entity("WEBTimViec.Models.ViTriCongViec", b =>
                {
                    b.Navigation("baiTuyenDung_ViTris");
                });
#pragma warning restore 612, 618
        }
    }
}
